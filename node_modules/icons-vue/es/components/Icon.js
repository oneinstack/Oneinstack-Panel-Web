import * as _vue from "vue";

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/*
 * @Author: Deivo
 * @Date: 2021-09-13 16:33:47
 * @LastEditors: Deivo
 * @LastEditTime: 2021-09-14 23:04:03
 * @FilePath: /icons-vue/src/components/Icon.tsx
 */
import { defineComponent } from 'vue';
import IconBase from './IconBase';
import { useInsertStyles } from '../utils';
var StarFilled = {
  icon: {
    tag: 'svg',
    attr: {
      viewBox: '0 0 128 128',
      focusable: false
    },
    children: [{
      tag: 'path',
      attrs: {
        d: 'M70.66 4.328l14.01 29.693c1.088 2.29 3.177 3.882 5.603 4.25l31.347 4.76c6.087.926 8.528 8.756 4.117 13.247L103.05 79.395c-1.75 1.78-2.544 4.352-2.132 6.867l5.352 32.641c1.043 6.337-5.33 11.182-10.778 8.19l-28.039-15.409a7.13 7.13 0 00-6.91 0l-28.039 15.41c-5.448 2.99-11.821-1.854-10.777-8.19l5.352-32.642c.415-2.515-.387-5.088-2.136-6.867L2.264 56.278C-2.146 51.787.286 43.957 6.38 43.031l31.343-4.76c2.419-.368 4.51-1.96 5.595-4.25L57.334 4.328c2.728-5.77 10.605-5.77 13.325 0z'
      }
    }]
  },
  name: 'star',
  theme: 'filled'
};
export default defineComponent({
  props: {
    iconName: {
      type: String
    }
  },
  setup: function setup(props, content) {
    console.log(props, content, '@Icon======');

    var classes = _defineProperty({
      'efssc-icon': true
    }, "efssc-icon-".concat(props.iconName), Boolean(props.iconName));

    useInsertStyles();
    return function () {
      return _vue.createVNode("span", {
        "role": "img",
        "class": classes
      }, [_vue.createVNode(IconBase, {
        "iconName": JSON.stringify(StarFilled.name)
      }, null)]);
    };
  }
});
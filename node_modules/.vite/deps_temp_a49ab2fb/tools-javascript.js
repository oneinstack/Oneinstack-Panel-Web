// node_modules/tools-javascript/dist/tools-javascript.js
!function() {
  "use strict";
  class t {
  }
  t.swapArray = (t2, e2, n2) => (t2[e2] = t2.splice(n2, 1, t2[e2])[0], t2), t.zIndexUp = (e2, n2) => {
    0 != n2 && t.swapArray(e2, n2, n2 - 1);
  }, t.zIndexDown = (e2, n2) => {
    n2 + 1 != e2.length && t.swapArray(e2, n2, n2 + 1);
  }, t.zIndexTop = (e2, n2) => {
    if (0 != n2)
      for (var r2 = n2 - 0, o2 = 0; o2 < r2; o2++)
        t.swapArray(e2, n2, n2 - 1), n2--;
  }, t.zIndexBottom = (e2, n2) => {
    if (n2 + 1 != e2.length)
      for (var r2 = e2.length - 1 - n2, o2 = 0; o2 < r2; o2++)
        t.swapArray(e2, n2, n2 + 1), n2++;
  }, t.diff = (t2, e2) => t2.filter((t3) => -1 === e2.indexOf(t3));
  class e {
  }
  e._keyStr = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=", e.encode = (t2) => {
    let n2, r2, o2, s2, i2, a2, l2, c2 = "", d2 = 0;
    for (t2 = e._utf8_encode(t2); d2 < t2.length; )
      n2 = t2.charCodeAt(d2++), r2 = t2.charCodeAt(d2++), o2 = t2.charCodeAt(d2++), s2 = n2 >> 2, i2 = (3 & n2) << 4 | r2 >> 4, a2 = (15 & r2) << 2 | o2 >> 6, l2 = 63 & o2, isNaN(r2) ? a2 = l2 = 64 : isNaN(o2) && (l2 = 64), c2 = c2 + e._keyStr.charAt(s2) + e._keyStr.charAt(i2) + e._keyStr.charAt(a2) + e._keyStr.charAt(l2);
    return c2;
  }, e.decode = (t2) => {
    let n2, r2, o2, s2, i2, a2, l2, c2 = "", d2 = 0;
    for (t2 = t2.replace(/[^A-Za-z0-9\+\/\=]/g, ""); d2 < t2.length; )
      s2 = e._keyStr.indexOf(t2.charAt(d2++)), i2 = e._keyStr.indexOf(t2.charAt(d2++)), a2 = e._keyStr.indexOf(t2.charAt(d2++)), l2 = e._keyStr.indexOf(t2.charAt(d2++)), n2 = s2 << 2 | i2 >> 4, r2 = (15 & i2) << 4 | a2 >> 2, o2 = (3 & a2) << 6 | l2, c2 += String.fromCharCode(n2), 64 != a2 && (c2 += String.fromCharCode(r2)), 64 != l2 && (c2 += String.fromCharCode(o2));
    return c2 = e._utf8_decode(c2), c2;
  }, e._utf8_encode = (t2) => {
    t2 = t2.replace(/\r\n/g, "\n");
    let e2 = "";
    for (let n2 = 0; n2 < t2.length; n2++) {
      let r2 = t2.charCodeAt(n2);
      r2 < 128 ? e2 += String.fromCharCode(r2) : r2 > 127 && r2 < 2048 ? (e2 += String.fromCharCode(r2 >> 6 | 192), e2 += String.fromCharCode(63 & r2 | 128)) : (e2 += String.fromCharCode(r2 >> 12 | 224), e2 += String.fromCharCode(r2 >> 6 & 63 | 128), e2 += String.fromCharCode(63 & r2 | 128));
    }
    return e2;
  }, e._utf8_decode = (t2) => {
    let e2 = "", n2 = 0, r2 = 0, o2 = 0;
    for (; n2 < t2.length; )
      if (r2 = t2.charCodeAt(n2), r2 < 128)
        e2 += String.fromCharCode(r2), n2++;
      else if (r2 > 191 && r2 < 224)
        o2 = t2.charCodeAt(n2 + 1), e2 += String.fromCharCode((31 & r2) << 6 | 63 & o2), n2 += 2;
      else {
        o2 = t2.charCodeAt(n2 + 1);
        let s2 = t2.charCodeAt(n2 + 2);
        e2 += String.fromCharCode((15 & r2) << 12 | (63 & o2) << 6 | 63 & s2), n2 += 3;
      }
    return e2;
  };
  class n {
    static uint8ArrayToString(t2) {
      for (var e2 = "", n2 = 0; n2 < t2.length; n2++)
        e2 += String.fromCharCode(t2[n2]);
      return e2;
    }
    static stringToUint8Array(t2) {
      for (var e2 = [], n2 = 0; n2 < t2.length; n2++)
        e2.push(t2.charCodeAt(n2));
      return new Uint8Array(e2);
    }
  }
  var r, o;
  n.byteToString = (t2) => {
    if ("string" == typeof t2)
      return t2;
    for (var e2 = "", n2 = t2, r2 = 0; r2 < n2.length; r2++) {
      var o2 = n2[r2].toString(2), s2 = o2.match(/^1+?(?=0)/);
      if (s2 && 8 == o2.length) {
        for (var i2 = s2[0].length, a2 = n2[r2].toString(2).slice(7 - i2), l2 = 1; l2 < i2; l2++)
          a2 += n2[l2 + r2].toString(2).slice(2);
        e2 += String.fromCharCode(parseInt(a2, 2)), r2 += i2 - 1;
      } else
        e2 += String.fromCharCode(n2[r2]);
    }
    return e2;
  }, n.stringToByte = (t2) => {
    var e2, n2, r2 = new Array();
    e2 = t2.length;
    for (var o2 = 0; o2 < e2; o2++)
      (n2 = t2.charCodeAt(o2)) >= 65536 && n2 <= 1114111 ? (r2.push(n2 >> 18 & 7 | 240), r2.push(n2 >> 12 & 63 | 128), r2.push(n2 >> 6 & 63 | 128), r2.push(63 & n2 | 128)) : n2 >= 2048 && n2 <= 65535 ? (r2.push(n2 >> 12 & 15 | 224), r2.push(n2 >> 6 & 63 | 128), r2.push(63 & n2 | 128)) : n2 >= 128 && n2 <= 2047 ? (r2.push(n2 >> 6 & 31 | 192), r2.push(63 & n2 | 128)) : r2.push(255 & n2);
    return r2;
  };
  class s {
    static uuid() {
      return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, function(t2) {
        var e2 = 16 * Math.random() | 0;
        return ("x" == t2 ? e2 : 3 & e2 | 8).toString(16);
      });
    }
    static isNull(t2) {
      return Array.isArray(t2) ? 0 == t2.length : t2 + "" == "null" || t2 + "" == "undefined" || "" === t2 || t2 + "" == "NaN";
    }
    static isNumber(t2) {
      return /^[0-9]+$/.test(t2);
    }
    static getParam(t2) {
      const e2 = t2.match(/[?&]([^=#]+)=([^&#]*)/g);
      return e2 ? e2.reduce((t3, e3) => {
        const [n2, r2] = e3.substring(1).split("=");
        return t3[n2] = decodeURIComponent(r2), t3;
      }, {}) : {};
    }
    static copyText(t2) {
      return new Promise((e2) => {
        if (navigator.clipboard)
          navigator.clipboard.writeText(t2).then(() => {
            e2(true);
          }).catch((t3) => {
            e2(false);
          });
        else {
          const n2 = document.createElement("textarea");
          n2.value = t2, document.body.appendChild(n2), n2.select(), document.execCommand("copy"), document.body.removeChild(n2), e2(true);
        }
      });
    }
  }
  r = s, s.id = 1e3, s.getId = () => (r.id++, r.id + "");
  class i {
  }
  i.id = 1e3, i.getId = () => "_CEvent_" + i.id++, i.map = {}, i.add = (t2) => {
    i.map[t2.id] = t2;
  }, i.remove = (...t2) => {
    const e2 = i;
    t2.forEach((t3) => {
      e2.map[t3] && (e2.map[t3].clear(), e2.map[t3] = null, delete e2.map[t3]);
    });
  };
  class a {
    constructor() {
      this.vm = () => () => true, this.eventMap = /* @__PURE__ */ new Map(), this.id = i.getId(), this.tag = "__CEventBean__", this.on = (t2, e2, n2) => {
        let r2 = this;
        if (!n2) {
          const t3 = r2.vm();
          n2 = () => t3();
        }
        let o2 = r2.tag + i.getId(), s2 = r2.eventMap.get(t2);
        return s2 || (s2 = []), s2.push({ callback: e2, vm: n2, uid: o2, key: t2 }), r2.eventMap.set(t2, s2), o2;
      }, this.once = (t2, e2, n2) => {
        let r2 = this, o2 = "";
        return o2 = r2.on(t2, (t3) => {
          e2(t3), r2.off(o2);
        }, n2), o2;
      }, this.emit = (t2, e2 = {}, n2 = true) => {
        let r2 = this;
        n2 ? Object.keys(i.map).forEach((n3) => {
          i.map[n3].emit(t2, e2, false);
        }) : r2.eventMap.forEach((n3) => {
          n3.forEach((n4) => {
            n4.key === t2 && (n4.vm() ? n4.callback(e2) : (r2.off(n4.uid), i.remove(r2.id)));
          });
        });
      }, this.off = (...t2) => {
        let e2 = this;
        if (2 === t2.length) {
          const n3 = t2[0], r3 = t2[1];
          if ("function" == typeof r3) {
            const t3 = e2.eventMap.get(n3);
            if (t3) {
              let o2 = t3.filter((t4) => t4.callback !== r3);
              0 == o2.length ? e2.eventMap.delete(n3) : e2.eventMap.set(n3, o2);
            }
            return;
          }
        }
        let n2 = [], r2 = [];
        t2.forEach((t3) => {
          -1 !== t3.indexOf(e2.tag) ? n2.push(t3) : r2.push(t3);
        }), n2.length > 0 && e2.eventMap.forEach((t3, r3) => {
          let o2 = t3.filter((t4) => !n2.includes(t4.uid));
          0 == o2.length ? e2.eventMap.delete(r3) : e2.eventMap.set(r3, o2);
        }), r2.forEach((t3) => {
          e2.eventMap.delete(t3);
        });
      }, this.clear = () => {
        this.eventMap = /* @__PURE__ */ new Map();
      }, i.add(this);
    }
  }
  class l {
    static on(t2, e2, n2) {
      return l.eventbean.on(t2, e2, n2);
    }
    static once(t2, e2, n2) {
      return l.eventbean.once(t2, e2, n2);
    }
    static emit(t2, e2 = {}, n2 = true) {
      return l.eventbean.emit(t2, e2, n2);
    }
    static off(...t2) {
      return l.eventbean.off(...t2);
    }
    static clear() {
      return l.eventbean.clear();
    }
  }
  l.eventbean = new a();
  class c {
    static moveDiv(t2, e2) {
      const n2 = (t3, e3) => {
        let n3 = parseFloat(t3.split("px")[0]);
        return void 0 !== e3 && (n3 = parseFloat(n3.toFixed(e3))), n3;
      };
      t2.style.position = "absolute", t2.style.width = t2.offsetWidth + "px", t2.style.height = t2.offsetHeight + "px", t2.style.left = t2.offsetLeft + "px", t2.style.top = t2.offsetTop + "px";
      const r2 = { start: false, x: 0, y: 0 };
      t2.onmousedown = (e3) => {
        if (0 === e3.button) {
          if ("none" === t2.style.pointerEvents)
            return;
          r2.start = true, r2.x = e3.x, r2.y = e3.y, document.onmousemove = (e4) => {
            if (r2.start) {
              const o2 = t2.getBoundingClientRect().width / t2.offsetWidth;
              let s2 = e4.x - r2.x, i2 = e4.y - r2.y;
              s2 /= o2, i2 /= o2;
              const a2 = n2(t2.style.top) + i2, l2 = n2(t2.style.left) + s2;
              t2.style.top = a2 + "px", t2.style.left = l2 + "px", r2.x = e4.x, r2.y = e4.y;
            }
          };
        }
      }, t2.onmousemove = () => {
        t2.style.cursor = "move";
      }, t2.onmouseup = (o2) => {
        const s2 = n2(t2.style.top, 0), i2 = n2(t2.style.left, 0), a2 = n2(t2.style.width, 0), l2 = n2(t2.style.height, 0);
        t2.style.top = s2 + "px", t2.style.left = i2 + "px", t2.style.width = a2 + "px", t2.style.height = l2 + "px", r2.start = false, r2.x = 0, r2.y = 0, document.onmousemove = null, e2 && e2({ left: i2, top: s2 });
      };
    }
    static getScrollbarWidth() {
      const t2 = document.createElement("div");
      t2.style.cssText = "width: 99px; height: 99px; overflow: scroll; position: absolute; top: -9999px;", document.body.appendChild(t2);
      const e2 = t2.offsetWidth - t2.clientWidth;
      return document.body.removeChild(t2), e2;
    }
  }
  c.listener = (t2, e2, n2) => {
    t2.addEventListener(e2, n2);
    return { remove: () => t2.removeEventListener(e2, n2) };
  }, c.useTouch = () => {
    const t2 = { startX: -1, startY: -1, deltaX: 0, deltaY: 0, offsetX: 0, offsetY: 0, direction: "" };
    const e2 = () => {
      t2.startX = -1, t2.startY = -1, t2.deltaX = 0, t2.deltaY = 0, t2.offsetX = 0, t2.offsetY = 0, t2.direction = "";
    }, n2 = (t3) => {
      const e3 = t3;
      return { x: void 0 !== e3.clientX ? e3.clientX : e3.touches[0].clientX, y: void 0 !== e3.clientY ? e3.clientY : e3.touches[0].clientY };
    };
    return { move: (e3) => {
      const r2 = n2(e3);
      t2.deltaX = (r2.x < 0 ? 0 : r2.x) - t2.startX, t2.deltaY = r2.y - t2.startY, t2.offsetX = Math.abs(t2.deltaX), t2.offsetY = Math.abs(t2.deltaY);
      var o2, s2;
      (!t2.direction || t2.offsetX < 10 && t2.offsetY < 10) && (t2.direction = (o2 = t2.offsetX, s2 = t2.offsetY, o2 > s2 ? "horizontal" : s2 > o2 ? "vertical" : ""));
    }, start: (r2) => {
      e2();
      const o2 = n2(r2);
      t2.startX = o2.x, t2.startY = o2.y;
    }, reset: e2, isVertical: () => "vertical" === t2.direction, isHorizontal: () => "horizontal" === t2.direction, conf: t2 };
  }, c.isTextOverflow = (t2) => {
    const e2 = document.createElement("div"), n2 = window.getComputedStyle(t2);
    if ("nowrap" !== n2.whiteSpace)
      return false;
    e2.style.cssText = n2.cssText, e2.style.fontSize = n2.fontSize, e2.style.padding = n2.padding, e2.style.position = "absolute", e2.style.visibility = "hidden", e2.style.whiteSpace = "nowrap", e2.style.width = "auto", e2.style.maxWidth = "none", e2.style.overflow = "visible", e2.textContent = t2.textContent, document.body.appendChild(e2);
    const r2 = e2.offsetWidth > t2.offsetWidth;
    return document.body.removeChild(e2), r2;
  }, c.loadImage = (t2) => {
    if (!(t2.extensions || [".png", ".jpg", ".jpeg", ".webp", ".gif", ".svg"]).some((e3) => t2.url.endsWith(e3)))
      return;
    let e2 = new Image();
    e2.crossOrigin = "Anonymous", e2.src = t2.url;
    let n2 = false;
    return e2.onload = function() {
      var r2;
      if (n2)
        return;
      n2 = true;
      const o2 = { dataBase64: "", dataArray: null };
      if (t2.base64 || t2.arrayBuffer) {
        let n3 = document.createElement("canvas");
        const r3 = n3.getContext("2d");
        n3.height = e2.height, n3.width = e2.width, r3.drawImage(e2, 0, 0, e2.width, e2.height);
        const s2 = t2.url.split(".").pop();
        t2.arrayBuffer && (o2.dataArray = r3.getImageData(0, 0, e2.width, e2.height)), t2.base64 && (o2.dataBase64 = "gif" === s2 || "svg" === s2 ? n3.toDataURL(`image/${s2}`) : n3.toDataURL(`image/${s2}`, t2.base64Quality)), n3 = null;
      }
      null === (r2 = t2.load) || void 0 === r2 || r2.call(t2, e2, o2), e2 = null;
    }, e2.onerror = function() {
      var e3;
      n2 || (n2 = true, null === (e3 = t2.error) || void 0 === e3 || e3.call(t2));
    }, { img: e2, abort: () => {
      if (!n2) {
        n2 = true;
        try {
          e2.src = "", e2 = null;
        } catch (t3) {
        }
      }
    } };
  };
  class d {
  }
  o = d, d.arrToHex = (t2) => {
    let e2 = "";
    return t2.forEach((t3) => e2 += (2 ^ t3).toString(16) + "u"), e2.substring(0, e2.length - 1);
  }, d.hexToArr = (t2) => {
    let e2 = [];
    return t2.split("u").forEach((t3) => {
      e2.push(2 ^ parseInt(((t4) => {
        for (var e3, n2 = t4.length, r2 = new Array(n2), o2 = 0; o2 < n2; o2++)
          48 <= (e3 = t4.charCodeAt(o2)) && e3 < 58 ? e3 -= 48 : e3 = (223 & e3) - 65 + 10, r2[o2] = e3;
        return r2.reduce(function(t5, e4) {
          return 16 * t5 + e4;
        }, 0);
      })(t3)));
    }), e2;
  }, d.encode = (t2) => o.arrToHex(n.stringToByte(t2)), d.decode = (t2) => n.byteToString(o.hexToArr(t2));
  class u {
  }
  u.sendMessage = (t2, e2) => {
    var n2, r2;
    if (e2) {
      const r3 = document.getElementById(e2);
      null === (n2 = null == r3 ? void 0 : r3.contentWindow) || void 0 === n2 || n2.postMessage(t2, "*");
    } else
      null === (r2 = window.parent) || void 0 === r2 || r2.postMessage(t2);
  }, u.onMassage = (t2) => {
    window.addEventListener("message", t2);
  }, u.offMassage = (t2) => {
    window.removeEventListener("message", t2);
  };
  class h {
    static cp(t2) {
      try {
        return JSON.parse(JSON.stringify(t2));
      } catch (t3) {
        return null;
      }
    }
    static deepClone(t2, e2 = /* @__PURE__ */ new WeakMap()) {
      let n2 = t2;
      if (null === n2)
        return n2;
      if (n2 instanceof Date)
        return new Date(n2);
      if (n2 instanceof RegExp)
        return new RegExp(n2);
      if ("object" != typeof n2)
        return n2;
      if (e2.get(n2))
        return e2.get(n2);
      try {
        let t3 = new n2.constructor();
        e2.set(n2, t3);
        for (let r2 in n2)
          n2.hasOwnProperty(r2) && (t3[r2] = this.deepClone(n2[r2], e2));
        return t3;
      } catch (t3) {
        return n2;
      }
    }
  }
  h.strToObject = (t2) => {
    "object" == typeof t2 && t2 && Object.keys(t2).forEach((e2) => {
      const n2 = t2[e2];
      "string" == typeof n2 && (n2.startsWith("{") && n2.endsWith("}") || n2.startsWith("[") && n2.endsWith("]")) && (t2[e2] = JSON.parse(n2)), h.strToObject(t2[e2]);
    });
  };
  class p {
  }
  function f(t2, e2 = 15) {
    return +parseFloat(Number(t2).toPrecision(e2));
  }
  function m(t2) {
    const e2 = t2.toString().split(/[eE]/), n2 = (e2[0].split(".")[1] || "").length - +(e2[1] || 0);
    return n2 > 0 ? n2 : 0;
  }
  function g(t2) {
    if (-1 === t2.toString().indexOf("e"))
      return Number(t2.toString().replace(".", ""));
    const e2 = m(t2);
    return e2 > 0 ? f(Number(t2) * Math.pow(10, e2)) : Number(t2);
  }
  function y(t2) {
    return (...e2) => {
      const [n2, ...r2] = e2;
      return r2.reduce((e3, n3) => t2(e3, n3), n2);
    };
  }
  p.groupKey = (t2, e2) => {
    let n2 = {};
    const r2 = { ctrl: "control", esc: "escape" };
    t2 = t2.map((t3) => (t3 = t3.toLocaleLowerCase(), r2[t3] && (t3 = r2[t3]), t3));
    const o2 = function(r3) {
      if (!r3.key)
        return;
      const o3 = r3.key.toLocaleLowerCase();
      if (n2[o3])
        return;
      n2[o3] = true;
      const s3 = t2[t2.length - 1] === o3;
      let i2 = true;
      for (let e3 = 0; e3 < t2.length - 1; e3++)
        if (!n2[t2[e3]]) {
          i2 = false;
          break;
        }
      s3 && i2 && e2();
    }, s2 = function(t3) {
      if (!t3.key)
        return;
      const e3 = t3.key.toLocaleLowerCase();
      n2[e3] = false;
    };
    return document.addEventListener("keydown", o2), document.addEventListener("keyup", s2), () => {
      document.removeEventListener("keydown", o2), document.removeEventListener("keyup", s2);
    };
  };
  const x = y((t2, e2) => {
    const n2 = g(t2), r2 = g(e2), o2 = m(t2) + m(e2);
    return n2 * r2 / Math.pow(10, o2);
  }), v = y((t2, e2) => {
    const n2 = Math.pow(10, Math.max(m(t2), m(e2)));
    return (x(t2, n2) + x(e2, n2)) / n2;
  }), b = y((t2, e2) => {
    const n2 = Math.pow(10, Math.max(m(t2), m(e2)));
    return (x(t2, n2) - x(e2, n2)) / n2;
  }), w = y((t2, e2) => {
    const n2 = g(t2), r2 = g(e2);
    return x(n2 / r2, f(Math.pow(10, m(e2) - m(t2))));
  });
  class C {
    static getNumber(t2, e2) {
      let n2 = parseFloat(t2);
      return n2 = s.isNull(n2) ? 0 : n2, e2 ? parseFloat(n2.toFixed(e2)) : n2;
    }
    static getRandomInt(t2, e2) {
      return t2 = Math.ceil(t2), e2 = Math.floor(e2), Math.floor(Math.random() * (e2 - t2 + 1)) + t2;
    }
  }
  C.strip = f, C.plus = v, C.minus = b, C.times = x, C.divide = w, C.round = function(t2, e2) {
    const n2 = Math.pow(10, e2);
    let r2 = w(Math.round(Math.abs(x(t2, n2))), n2);
    return t2 < 0 && 0 !== r2 && (r2 = x(r2, -1)), r2;
  }, C.digitLength = m, C.float2Fixed = g;
  class S {
  }
  S.id = 0, S.getId = () => "_Timer_" + S.id++, S.map = {}, S.add = (t2, e2, n2, r2) => {
    const o2 = S, s2 = o2.getId(), i2 = n2 ? setInterval : setTimeout, a2 = n2 ? clearInterval : clearTimeout, l2 = () => {
      o2.map[s2] && a2(c2), o2.map[s2] = void 0, delete o2.map[s2];
    }, c2 = i2(() => {
      r2() ? (t2(), n2 || l2()) : l2();
    }, e2);
    return o2.map[s2] = { fun: t2, vm: r2, id: s2, remove: l2 }, o2.map[s2];
  }, S.remove = (...t2) => {
    const e2 = S;
    t2.forEach((t3) => {
      e2.map[t3] && e2.map[t3].remove();
    });
  }, S.removeAll = () => {
    const t2 = S;
    t2.remove(...Object.keys(t2.map));
  };
  class M {
    constructor() {
      this.map = {}, this.vm = () => () => true, this.createVM = (t2) => {
        if (!t2) {
          const e2 = this.vm();
          t2 = () => e2();
        }
        return t2;
      }, this.once = (t2, e2 = 0, n2) => {
        const r2 = S.add(t2, e2, false, this.createVM(n2));
        return this.map[r2.id] = r2, r2.id;
      }, this.clear = () => {
        const t2 = this, e2 = Object.keys(t2.map);
        for (let n2 = 0; n2 < e2.length; n2++) {
          const r2 = e2[n2], o2 = t2.map[r2];
          o2 && o2.remove(), t2.map[r2] = void 0, delete t2.map[r2];
        }
      }, this.delayUnit = 1, this.delay = (t2 = 0, e2 = this.delayUnit) => {
        const n2 = this;
        return new Promise((r2) => {
          n2.once(() => r2(), t2 * e2);
        });
      }, this.on = (t2, e2, n2 = false, r2) => {
        n2 && t2();
        const o2 = S.add(t2, e2, true, this.createVM(r2));
        return this.map[o2.id] = o2, o2.id;
      }, this.un = (...t2) => {
        const e2 = this;
        t2.forEach((t3) => {
          const n2 = e2.map[t3];
          n2 && n2.remove(), e2.map[t3] = void 0, delete e2.map[t3];
        });
      };
    }
  }
  class T {
    static once(t2, e2 = 0, n2) {
      return this.timerBean.once(t2, e2, n2);
    }
    static async delay(t2 = 0, e2 = this.delayUnit) {
      await this.timerBean.delay(t2, e2);
    }
    static on(t2, e2, n2 = false, r2) {
      return this.timerBean.on(t2, e2, n2, r2);
    }
  }
  T.timerBean = new M(), T.clear = () => {
    S.removeAll();
  }, T.delayUnit = 1, T.un = (...t2) => {
    S.remove(...t2);
  };
  class O {
    remove(t2) {
      const e2 = this;
      for (let n2 = e2.length - 1; n2 >= 0; n2--)
        "function" == typeof t2 ? t2(e2[n2]) && e2.splice(n2, 1) : e2[n2] === t2 && e2.splice(n2, 1);
    }
    toSet(t2) {
      return void 0 === t2 && (t2 = (t3, e2) => t3 === e2), this.filter((e2, n2, r2) => r2.findIndex((n3) => t2(e2, n3)) === n2);
    }
    randSort() {
      const t2 = this;
      for (var e2 = 0, n2 = t2.length; e2 < n2; e2++) {
        var r2 = parseInt(Math.random() * n2 + ""), o2 = t2[r2];
        t2[r2] = t2[e2], t2[e2] = o2;
      }
    }
    sum(t2) {
      return this.reduce((e2, n2) => e2 += t2 ? n2[t2] : n2, 0);
    }
  }
  class E {
    static Format(t2, e2) {
      return Date.Format(this, t2, e2);
    }
    static FormatDiff(t2) {
      return Date.FormatDiff(this, t2);
    }
    static getTimeDiff() {
      return Date.timeDiff + this.getTime();
    }
  }
  class j {
    static contains(t2, e2) {
      const n2 = this;
      return n2.left < t2 && n2.top < e2 && t2 < n2.left + n2.width && e2 < n2.top + n2.height;
    }
    static containX(t2) {
      const e2 = this;
      return e2.left < t2 && t2 < e2.left + e2.width;
    }
    static containY(t2) {
      const e2 = this;
      return e2.top < t2 && t2 < e2.top + e2.height;
    }
  }
  class k {
    static args() {
      let t2 = this.toString();
      return t2 = t2.substring(t2.indexOf("(") + 1, t2.indexOf("{")).replace(/\s+/g, ""), t2.substring(0, t2.indexOf(")")).split(",").filter((t3) => t3.length > 0);
    }
  }
  class A {
    static toJson() {
      const t2 = this;
      let e2 = {};
      for (const n2 of t2)
        e2[n2[0]] = n2[1];
      return JSON.stringify(e2);
    }
  }
  class D {
    static init() {
      Date.formatFail = "", Date.Format = (t2, e2, n2) => {
        if (!(t2 instanceof Date)) {
          if (String(t2).length < 10)
            return n2 || Date.formatFail;
          t2 = new Date(t2);
        }
        const r2 = new Date(t2.getTime());
        e2 || (e2 = "yyyy-MM-dd hh:mm:ss");
        var o2 = { "M+": r2.getMonth() + 1, "d+": r2.getDate(), "h+": r2.getHours(), "m+": r2.getMinutes(), "s+": r2.getSeconds(), "q+": Math.floor((r2.getMonth() + 3) / 3), S: r2.getMilliseconds() };
        for (var s2 in /(y+)/.test(e2) && (e2 = e2.replace(RegExp.$1, (r2.getFullYear() + "").substring(4 - RegExp.$1.length))), o2)
          new RegExp("(" + s2 + ")").test(e2) && (e2 = e2.replace(RegExp.$1, 1 == RegExp.$1.length ? o2[s2] : ("00" + o2[s2]).substring(("" + o2[s2]).length)));
        return e2;
      }, Date.FormatDiff = (t2, e2) => (t2 instanceof Date || (t2 = new Date(t2)), Date.Format(t2.getTime() + Date.timeDiff, e2)), Date.timeDiff = 0;
    }
  }
  class N {
    static getClassNames(t2) {
      const e2 = { name: true, length: true, prototype: true, caller: true, callee: true, arguments: true, arity: true, constructor: true };
      let n2 = [], r2 = Object.getOwnPropertyNames(t2);
      for (let o2 = 0; o2 < r2.length; ++o2) {
        const s2 = r2[o2];
        e2[s2] || "function" != typeof t2[s2] || n2.push(s2);
      }
      return n2;
    }
  }
  N.getFunction = (t2) => {
    const e2 = t2.name, n2 = t2 + "", r2 = n2.indexOf("{"), o2 = -1 != n2.substring(0, r2).indexOf("*") ? "*" : "";
    return -1 != n2.substring(0, r2).indexOf("=>") ? new Function(`return function${o2} ${e2} ${n2.substring(0, n2.indexOf(")") + 1) + n2.substring(r2)}`)() : new Function(`return function${o2} ${e2}${n2.substring(n2.indexOf("("))}`)();
  }, N.setPrototype = (t2, e2, n2) => {
    n2 = N.getFunction(n2), Object.defineProperty(t2.prototype, e2, { writable: true, enumerable: false, value: n2 });
  }, N.classSetToProperty = (t2, e2) => {
    N.getClassNames(t2).forEach((n2) => {
      N.setPrototype(window[e2], n2, t2[n2]);
    });
  }, N.iterator = function() {
    let t2 = this, e2 = Object.keys(t2), n2 = 0;
    return "_Vue3ToolIterator" === this._Vue3ToolIterator && (e2 = this.keys, t2 = this.obj), new class {
      constructor() {
        return this._Vue3ToolIterator = "_Vue3ToolIterator", this.obj = t2, this.keys = e2, this.next = () => (n2++, { value: n2 > e2.length ? null : t2[e2[n2 - 1]], done: n2 > this.keys.length }), this;
      }
    }();
  };
  class W {
    static init() {
      N.classSetToProperty(O.prototype, "Array"), D.init(), N.classSetToProperty(E, "Date"), N.classSetToProperty(k, "Function"), N.classSetToProperty(j, "DOMRect"), N.classSetToProperty(A, "Map");
    }
  }
  var I, F, U;
  class B {
  }
  I = B, B.objectToString = Object.prototype.toString, B.toTypeString = (t2) => I.objectToString.call(t2), B.isArray = Array.isArray, B.isMap = (t2) => "[object Map]" === I.toTypeString(t2), B.isSet = (t2) => "[object Set]" === I.toTypeString(t2), B.isDate = (t2) => "[object Date]" === I.toTypeString(t2), B.isFunction = (t2) => "function" == typeof t2, B.isString = (t2) => "string" == typeof t2, B.isSymbol = (t2) => "symbol" == typeof t2, B.isObject = (t2) => null !== t2 && "object" == typeof t2, B.isPromise = (t2) => I.isObject(t2) && I.isFunction(t2.then) && I.isFunction(t2.catch), B.getObject = (t2, e2) => {
    const n2 = I;
    let r2 = false;
    if (n2.isArray(t2))
      for (let n3 = 0; n3 < t2.length && (r2 = I.getObject(t2[n3], e2), !r2); n3++)
        ;
    else if (n2.isObject(t2)) {
      const o2 = Object.keys(t2);
      for (let s2 = 0; s2 < o2.length; s2++) {
        const i2 = o2[s2], a2 = t2[i2];
        if (r2 = e2(i2, a2, t2), r2)
          break;
        if ((n2.isArray(a2) || n2.isObject(a2)) && (r2 = n2.getObject(a2, e2)), r2)
          break;
      }
    }
    return r2;
  }, B.getObjectByChildren = (t2, e2, n2 = ["children"]) => {
    if (Array.isArray(t2))
      for (let r2 = 0; r2 < t2.length; r2++)
        I.getObjectByChildren(t2[r2], e2, n2);
    else if (I.isObject(t2)) {
      e2(t2);
      for (let r2 = 0; r2 < n2.length; r2++)
        t2[n2[r2]] && I.getObjectByChildren(t2[n2[r2]], e2, n2);
    }
  }, B.deepMerge = (t2, e2) => {
    const n2 = I, r2 = Object.assign({}, t2);
    for (const o2 in e2)
      e2.hasOwnProperty(o2) && ("object" == typeof e2[o2] && t2.hasOwnProperty(o2) && "object" == typeof t2[o2] ? r2[o2] = n2.deepMerge(t2[o2], e2[o2]) : r2[o2] = e2[o2]);
    return r2;
  }, B.getPathValue = (t2, e2) => {
    if ("object" != typeof t2)
      return "";
    const n2 = e2.split(".");
    let r2 = t2;
    for (const t3 of n2)
      r2 && "object" == typeof r2 && (r2 = r2[t3]);
    return r2;
  };
  class _ {
    static init() {
      const t2 = (t3, e3, n2) => {
        if (e3) {
          e3.onreadystatechange = null, e3.onload = null, e3.onerror = null, e3.onabort = null, e3.ontimeout = null;
          try {
            e3.onprogress = null;
          } catch (t4) {
          }
          try {
            e3.upload.onprogress = null, e3.upload.onload = null, e3.upload.onerror = null, e3.upload.onabort = null, e3.upload.ontimeout = null, e3.upload.onloadend = null, e3.upload.onloadstart = null;
          } catch (t4) {
          }
          e3 = void 0;
        }
        n2 && (t3.xhr[n2] = void 0, delete t3.xhr[n2]);
      }, e2 = (e3) => {
        const n2 = { dataCache: {}, xhr: {}, get: (e4, r2) => {
          r2 || (r2 = {}), "string" == typeof e4 ? e4 = { url: e4, method: "GET" } : (e4.method = e4.method || "GET", e4.method = e4.method.toUpperCase());
          const o2 = e4;
          return new Promise(async (i2, a2) => {
            const l2 = s.getId(), c2 = n2.config, d2 = c2.base, u2 = c2.before, h2 = c2.after, p2 = c2.error, f2 = { headers: c2.headers, data: r2, param: o2, stop: () => {
              m2 && (m2.abort(), t2(n2, m2, l2));
            } };
            let m2 = new XMLHttpRequest();
            u2 && await u2(f2, m2);
            let g2 = d2 + o2.url;
            o2.url.startsWith("http") && (g2 = o2.url), g2.startsWith("//") && (g2 = g2.replace(/(\/{2,})/g, "/"));
            const y2 = ((t3) => {
              const e5 = {};
              return Object.keys(t3).forEach((n3) => {
                "function" != typeof t3[n3] && (e5[n3] = t3[n3]);
              }), e5;
            })(f2.data);
            if ("GET" === o2.method) {
              const t3 = Object.keys(y2).map((t4) => `${t4}=${encodeURIComponent(y2[t4])}`).join("&");
              g2 = t3 ? `${g2}?${t3}` : g2;
            }
            const x2 = g2 + JSON.stringify(y2);
            0 !== o2.expire && void 0 !== o2.expire || delete n2.dataCache[x2];
            let v2 = n2.dataCache[x2];
            if (v2) {
              if (v2.expire > Date.now())
                return await h2({ data: v2.data, responseType: o2.responseType || c2.responseType, status: 200, xhr: null }, f2), void i2(v2.data);
              delete n2.dataCache[x2];
            }
            m2.open(o2.method, g2, true), o2.headers && (f2.headers = Object.assign(Object.assign({}, f2.headers), o2.headers)), Object.keys(f2.headers).forEach((t3) => {
              const e5 = f2.headers[t3];
              e5 && !e5.startsWith("multipart/form-data") && m2.setRequestHeader(t3, e5);
            }), m2.timeout = o2.timeout || c2.timeout, m2.responseType = o2.responseType || c2.responseType;
            try {
              m2.withCredentials = o2.withCredentials || c2.withCredentials;
            } catch (t3) {
            }
            const b2 = { 0: "ReQuest Interrupt", 404: "Request Address Not Found", 405: "Request Method Not Allowed", 500: "Request Exception", 504: "Request Timeout" }, w2 = (e5, r3) => {
              var o3;
              p2(e5, f2, r3), t2(n2, m2, l2), a2({ status: e5, message: null !== (o3 = b2[e5 + ""]) && void 0 !== o3 ? o3 : "Other Exception" });
            };
            m2.ontimeout = function() {
              w2(504);
            }, m2.onerror = function(t3) {
              w2(500);
            }, m2.onabort = function() {
              w2(0);
            };
            const C2 = e4;
            if (m2.upload && C2.onProgress && (m2.upload.onprogress = function(t3) {
              if (t3.lengthComputable && t3.total > 0) {
                const e5 = parseInt(t3.loaded / t3.total * 100);
                C2.onProgress(e5, t3.loaded, t3.total);
              }
            }), m2.onreadystatechange = async function() {
              if (4 === m2.readyState) {
                const e5 = { data: m2.response, responseType: m2.responseType, status: m2.status, xhr: m2 };
                if (0 !== m2.status) {
                  const t3 = m2.getResponseHeader("Content-Type");
                  if (t3 && t3.includes("application/json") && "string" == typeof m2.response)
                    try {
                      e5.data = JSON.parse(m2.response);
                    } catch (t4) {
                    }
                }
                if (200 === m2.status) {
                  if (o2.expire) {
                    let t3 = o2.expire;
                    t3 < 0 && (t3 = c2.expireMaxTime), n2.dataCache[x2] = { data: e5.data, expire: Date.now() + 1e3 * t3 };
                  }
                  await h2(e5, f2), 200 !== e5.status ? w2(e5.status) : t2(n2, m2, l2), i2(e5.data);
                } else
                  0 !== m2.status && w2(m2.status, e5);
              }
            }, "GET" === o2.method)
              m2.send();
            else {
              const t3 = f2.headers["Content-Type"];
              if ("multipart/form-data" == t3) {
                const t4 = new FormData();
                let e5 = 0;
                for (let n3 in y2)
                  y2[n3] instanceof File ? (t4.append(n3, y2[n3], y2[n3].name || n3), e5 += y2[n3].size) : t4.append(n3, y2[n3]);
                C2.onProgress && C2.onProgress(0, 0, e5), m2.send(t4);
              } else
                "application/x-www-form-urlencoded" == t3 ? m2.send(Object.keys(y2).map((t4) => `${t4}=${encodeURIComponent(y2[t4])}`).join("&")) : "application/json" == t3 ? m2.send(JSON.stringify(y2)) : m2.send(y2);
            }
            n2.xhr[l2] = m2;
          });
        }, post: (t3, e4) => ("string" == typeof t3 ? t3 = { url: t3, method: "POST" } : t3.method = t3.method || "POST", n2.get(t3, e4)), stop: () => {
          Object.keys(n2.xhr).forEach((e4) => {
            n2.xhr[e4].abort(), t2(n2, n2.xhr[e4]);
          }), n2.xhr = {};
        }, config: { base: "", timeout: 3e4, withCredentials: false, responseType: "text", expireMaxTime: 86400, headers: { Accept: "*", "Content-Type": "application/json" }, before: () => {
        }, after: () => {
        }, error: () => {
        } }, setConfig: (t3) => {
          n2.dataCache = {}, t3 && "object" == typeof t3 && (n2.config = B.deepMerge(n2.config, t3));
        } };
        return n2.setConfig(e3), n2;
      };
      window.httpBean = e2, window.http = e2();
    }
    static ping(t2, e2 = 6e3) {
      return new Promise((n2) => {
        t2.endsWith("/") || (t2 += "/");
        let r2 = new Image(), o2 = Date.now();
        const s2 = setTimeout(() => {
          n2(e2);
        }, e2);
        r2.onerror = function() {
          clearTimeout(s2), n2(Date.now() - o2);
        }, r2.src = t2 + o2;
      });
    }
  }
  class P {
  }
  P.setValue = (t2) => {
    if (t2 && "string" != typeof t2)
      try {
        t2 = JSON.stringify(t2);
      } catch (t3) {
      }
    return t2;
  }, P.getValue = (t2) => {
    if (t2 && ((null == t2 ? void 0 : t2.startsWith("{")) || (null == t2 ? void 0 : t2.startsWith("["))))
      try {
        return JSON.parse(t2);
      } catch (t3) {
      }
    return t2 && !isNaN(Number(t2)) ? Number(t2) : t2;
  };
  class R {
    static set(t2, e2, n2) {
      e2 = P.setValue(e2);
      let r2 = t2 + "=" + encodeURIComponent(e2);
      if (r2 += "; path=" + ((null == n2 ? void 0 : n2.path) ? null == n2 ? void 0 : n2.path : "/"), !(null == n2 ? void 0 : n2.session)) {
        let t3 = "";
        if (null == n2 ? void 0 : n2.expire)
          t3 = new Date(Date.now() + n2.expire * this.expireUnit).toUTCString();
        else {
          let e3 = /* @__PURE__ */ new Date();
          e3.setDate(e3.getDate() + R.expire), t3 = e3.toUTCString();
        }
        r2 += "; expires=" + t3;
      }
      n2 && n2.domain && (r2 += "; domain=" + n2.domain), document.cookie = r2;
    }
    static get(t2) {
      const e2 = t2 + "=", n2 = document.cookie.split(";");
      for (const t3 of n2) {
        const n3 = t3.trim();
        if (0 === n3.indexOf(e2)) {
          let t4 = decodeURIComponent(n3.substring(e2.length, n3.length));
          return t4 = P.getValue(t4), t4;
        }
      }
      return null;
    }
    static remove(t2, e2) {
      this.set(t2, "", { domain: e2, expire: -1 });
    }
    static clear(t2 = ["/"], e2 = "") {
      document.cookie.split(";").forEach((n2) => {
        const r2 = n2.indexOf("="), o2 = r2 > -1 ? n2.substr(0, r2) : n2;
        t2.forEach((t3) => {
          const n3 = e2 ? `;domain=${e2}` : "";
          document.cookie = `${o2}=;expires=Thu, 01 Jan 1970 00:00:00 GMT;path=${t3}${n3}`;
        });
      });
    }
  }
  R.expire = 3600, R.expireUnit = 1e3;
  class L {
    static set(t2, e2, n2) {
      var r2, o2;
      if (e2 = P.setValue(e2), null === (r2 = L.localStorage) || void 0 === r2 || r2.setItem(t2, e2), null == n2 ? void 0 : n2.expire) {
        const e3 = Date.now() + n2.expire * this.expireUnit;
        null === (o2 = L.localStorage) || void 0 === o2 || o2.setItem(t2 + "_expire", e3 + "");
      }
    }
    static get(t2) {
      var e2, n2;
      const r2 = null === (e2 = L.localStorage) || void 0 === e2 ? void 0 : e2.getItem(t2 + "_expire");
      if (r2 && Date.now() > Number(r2))
        return this.remove(t2), this.remove(t2 + "_expire"), null;
      let o2 = null === (n2 = L.localStorage) || void 0 === n2 ? void 0 : n2.getItem(t2);
      return o2 = P.getValue(o2), o2;
    }
    static remove(t2) {
      var e2;
      null === (e2 = L.localStorage) || void 0 === e2 || e2.removeItem(t2);
    }
    static clear() {
      L.localStorage.clear();
    }
  }
  L.localStorage = localStorage, L.expireUnit = 1e3;
  class $ {
  }
  F = $, $.httpBean = null, $.getFileFun = (t2) => {
    const e2 = F;
    null == e2.httpBean && (e2.httpBean = httpBean());
    let n2 = { base: "/", outtime: 3e4, responseType: "text" };
    t2 && (n2 = Object.assign(n2, t2));
    return (t3) => (t3.startsWith("http") || (t3 = n2.base + t3), new Promise((r2) => {
      e2.httpBean.get({ url: t3, timeout: n2.outtime, responseType: n2.responseType }).then((t4) => {
        r2(t4);
      }).catch(() => {
        r2(void 0);
      });
    }));
  }, $.getFile = (t2, e2) => F.getFileFun(e2)(t2);
  class X {
    static rem() {
      const t2 = X;
      let e2 = document.getElementsByTagName("head")[0].getAttribute("design-width");
      function n2() {
        let e3 = t2.getDeviceWidth();
        document.documentElement.style.fontSize = e3 / (t2.remWidth / t2.remFontSize) + "px";
      }
      e2 || (e2 = t2.remWidth), t2.remWidth = e2, n2(), window.addEventListener("resize", () => {
        n2();
      });
      const r2 = document.createElement("style");
      r2.innerHTML = "@media screen and (min-width:" + t2.remWidth + "px){.design-box{width:" + t2.remWidth + "px !important;position:relative;}", document.getElementsByTagName("head")[0].appendChild(r2);
    }
    static getDeviceWidth() {
      const t2 = X;
      let e2 = document.documentElement.clientWidth;
      const n2 = "function" == typeof t2.maxWidth ? t2.maxWidth() : t2.maxWidth;
      return e2 >= n2 && (e2 = n2), e2;
    }
    static rem2px(t2) {
      const e2 = X;
      return t2 * (e2.getDeviceWidth() / e2.remWidth);
    }
    static px2rem(t2) {
      const e2 = X;
      let n2 = e2.getDeviceWidth();
      return t2 * (e2.remWidth / n2);
    }
    static getMaxBox() {
      const t2 = this.remWidth, e2 = this.remHeight, n2 = window.innerWidth, r2 = window.innerHeight, o2 = e2 / t2, s2 = r2 / n2;
      return o2 > s2 ? { height: r2, width: r2 / o2 } : this.maxRatio && s2 > this.maxRatio ? { height: n2 * this.maxRatio, width: n2 } : { height: r2, width: n2 };
    }
    static getMaxHeight() {
      return this.getMaxBox().height;
    }
    static getMaxWidth() {
      return this.getMaxBox().width;
    }
  }
  X.remWidth = 750, X.maxWidth = 500, X.remFontSize = 1, X.maxRatio = 2.221, X.remHeight = 1334;
  class Y {
  }
  Y.countdown = (t2) => {
    const e2 = (t3) => t3 < 10 ? `0${t3}` : `${t3}`;
    let n2 = Math.floor(t2 / 1e3);
    if (n2 < 0)
      return ["00", "00", "00", 0];
    const r2 = Math.floor(n2 / 60 / 60 / 24), o2 = Math.floor(n2 / 60 / 60 % 24), s2 = Math.floor(n2 / 60 % 60), i2 = n2 % 60;
    return [e2(r2), e2(o2), e2(s2), e2(i2), n2];
  }, Y.somedayse = (t2 = 0, e2 = /* @__PURE__ */ new Date()) => {
    t2 *= 864e5, e2.setHours(0, 0, 0, 0);
    const n2 = e2.getTime() + t2;
    e2.setHours(23, 59, 59, 999);
    return [n2, e2.getTime() + t2];
  };
  const H = (t2) => {
    let e2 = t2.toString().trim();
    return e2.length > 50 && (e2 = e2.substring(0, 22) + e2.substring(e2.length - 22, e2.length - 1)), e2;
  };
  class V {
  }
  U = V, V.timer = T, V.debounceMap = {}, V.debounce = (t2, e2 = 500) => {
    const n2 = U, r2 = H(t2);
    n2.debounceMap[r2] && n2.timer.un(n2.debounceMap[r2]), n2.debounceMap[r2] = n2.timer.once(() => {
      t2(), delete n2.debounceMap[r2];
    }, e2);
  }, V.throttleMap = {}, V.throttle = (t2, e2 = 500, n2 = U.throttleTip) => {
    const r2 = U, o2 = H(t2);
    r2.throttleMap[o2] ? n2() : (t2(), r2.throttleMap[o2] = r2.timer.once(() => {
      delete r2.throttleMap[o2];
    }, e2));
  }, V.throttleTip = () => {
  }, V.lockMap = {}, V.lock = async (t2) => {
    const e2 = U, n2 = H(t2);
    return e2.lockMap[n2] || (e2.lockMap[n2] = new Promise(async (r2, o2) => {
      try {
        r2(await t2());
      } catch (t3) {
        o2(t3);
      }
      delete e2.lockMap[n2];
    })), await e2.lockMap[n2];
  };
  const z = { ArrayUtil: t, Base64Util: e, ByteUtil: n, CEvent: l, CEventBean: a, JSONUtil: h, KeyUtil: p, MathUtil: C, DomUtil: c, EnUtil: d, IFrameUtil: u, StrUtil: s, ScriptUtil: class {
    static scriptLoad(t2) {
      const e2 = (t3) => {
        t3.parentNode && t3.parentNode.removeChild(t3), t3.onload = null, t3.onerror = null, t3 = null;
      }, n2 = document.getElementsByTagName("script")[0] || document.head;
      let r2 = document.createElement("script");
      return r2.src = t2, n2.parentNode.insertBefore(r2, n2), new Promise((t3) => {
        r2.onload = function() {
          t3(true), e2(r2);
        }, r2.onerror = function() {
          t3(false), e2(r2);
        };
      });
    }
  }, TimerBean: M, Timer: T, HttpUtil: _, CookieVal: P, Cookie: R, CookieL: L, FileUtil: $, H5Util: X, ObjectUtil: B, TimeUtil: Y, FunUtil: V };
  if (!window.CookieL) {
    const t2 = Object.keys(z);
    for (let e2 = 0; e2 < t2.length; e2++) {
      const n2 = t2[e2];
      window[n2] = z[n2];
    }
    W.init(), _.init(), window.isNull = s.isNull;
  }
}();
//# sourceMappingURL=tools-javascript.js.map

/**
 * 路由工具
 */
export default class CRouter {
    /**
     * 初始化路由列表
     * @example
     * ```ts
     * //使用时\/替换为/
     * CRouter.init({
     *  modules: import.meta.glob('/src/views/**\/*.vue'),
     *  theme: Cookie.get('pageTheme'),
     *  excludeReg: ['/com/', '/components/'],
     *  children: [],
     *  init: [],
     *  alias: {}
     * })
     * ```
     * @returns
     */
    static init: (param: Partial<CRouterParam>) => any[];
}
export type CRouterParam = {
    /**
     * 页面map-使用import.meta.glob('/src/views/**\/*.vue')
     */
    modules: any;
    /**
     * 主题
     */
    theme: string;
    /**
     * 根路径-默认'/src/views'
     */
    root: string;
    /**
     * 主题标签-用于区分主题,默认为-(批评最后文件名称是否存在主题标签-，所以在开发时除了主题区分不使用主题标签)
     */
    themeTag: string;
    /**
     * 页面排除正则
     */
    excludeReg: string | string[] | RegExp | RegExp[];
    /**
     * 页面配置
     */
    children: Partial<CRouterParamChildren>[];
    /**
     * 路由地址修改钩子-一般用来修改path地址名称 如/modules/home/index/index修改为/home
     * @a 简单的指定可以用alias属性
     */
    pathHook: (path: string) => string;
    /**
     * 初始化路由
     */
    init: Partial<CRouterParamChildren>[];
    /**
     * 别名
     */
    alias: {
        [key: string]: string;
    };
};
export type CRouterParamChildren = {
    /**
     * 页面路径-如/home/index
     */
    path: string;
    /**
     * 页面组件-填vue文件地址
     * @a 如/src/views/home/index.vue填/home/index
     * @a 如/src/views/home/card.vue填/home/card
     */
    component: string;
    /**
     * 跳转路径-如/home/index
     */
    redirect: string;
    /**
     * 子路由
     */
    children: Partial<CRouterParamChildren>[];
    /**
     * 子路由地址列表
     */
    childrenList: string[];
    /**
     * 子路由包含正则
     */
    childrenReg: string | string[] | RegExp | RegExp[];
};

import { Plugin } from "vite";

/**
 * vite项目全局配置，可用于less，vue，index.html文件中
 * @param obj 配置对象（如：{title:"标题",runtime:{pc:"电脑"}}）
 * @param 使用方法 如：#{title}、#{runtime}、#{runtime.pc}
 * @param 注意 当对象作为变量时显示的是json字符串
 *
 * @example
 * //vite.config.ts中
 * defineConfig({
 *  css:{postcss:{plugins:[viteVar({static:'/static'})]}},
 *  plugins:[viteVar({static:'/static'})]
 * })
 */
declare function viteVar(obj: viteVarItem): any;

type viteVarItem = {
    [key: string]: viteVarItem | string | boolean;
};

/**
 * 设置代理，只对项目地址的代理，如/api、/images等，对其他http地址不起作用
 * @param item
 * @returns
 */
declare function viteProxy(item: { [key: string]: string }): {
    [key: string]: {
        target: string;
        changeOrigin: boolean;
        rewrite: (path: any) => any;
    };
};

/**
 * 按环境条件执行代码
 * @param mode 当前模式（如：dev、build等自定义环境名称）
 * @param 使用方法1 \<!-- #ifvar-dev --\>代码\<!-- endvar --\>
 * @param 使用方法2 //#ifvar-dev 代码 //#endvar
 * @param 注意 只支持两种注释语法，html和js
 *
 */
declare function viteDef(mode: string): Plugin;

/**
 * 组件类型提示生成
 */
declare function viteComType(config?: {
    /**
     * 组件地址目录，默认是./src/components/
     */
    comUrl?: string;
    /**
     * 组件前缀，默认是s
     */
    prefix?: string;
}): Plugin;

/**
 * 自动导入nestjs模块，仅固定支持controller、service、schema（mongoose）
 */
declare function nestAutoModule(): any;

export { viteVar, viteProxy, viteDef, viteComType, nestAutoModule };
